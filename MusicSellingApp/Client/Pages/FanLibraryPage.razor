@page "/fanLibrary"
@inject ILocalStorageService storageService
@inject HttpClient client
@inject IJSRuntime js
@using System.IO
@if (albums != null && albums.Count > 0)
{
    <div class="mat-layout-grid-inner">
        @foreach (var album in albums)
        {
            <div class="mat-layout-grid-cell">
                <BSCard CardType="CardType.Card">

                    <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src="@album.Cover" alt="Card image cap" />

                    <BSCard CardType="CardType.Body">
                        <BSCard CardType="CardType.Title">Album Name : @album.AlbumName</BSCard>

                        <BSCard CardType="CardType.Subtitle">Genre @album.Genre</BSCard>

                        <BSCard CardType="CardType.Text">Album Description @album.Description</BSCard>
                        <button @onclick="DownloadFile">Download to client</button>
                    </BSCard>

                </BSCard>
            </div>
        }
    </div>
}
    }


@code {
    List<FanAlbums> fanAlbums;
    List<Album> albums = new List<Album>();
    Fan fan;
    byte[] data;

    async Task DownloadFile()
    {
        data = await client.GetByteArrayAsync("api/DataFetcher");
        await MusicSellingApp.Client.Utils.FileUtil.SaveAs(js, "Anghellic.rar", data);
    }

    public void OnClickDownloadButton()
    {
    }

    protected override async Task OnInitializedAsync()
    {


        fan = await storageService.GetItemAsync<Fan>("loggedUser");
        fanAlbums = await client.GetFromJsonAsync<List<FanAlbums>>("api/FanAlbums");
        foreach (var fanAlbum in fanAlbums)
        {
            if (fanAlbum.FanId == fan.Id)
            {
                albums.Add(fanAlbum.Album);
            }
        }
    }
}

<style>
    h3 {
        color: yellow;
    }

    body {
        background-color: yellow;
    }



    img {
        width: 250px;
        height: 250px;
    }
</style>

