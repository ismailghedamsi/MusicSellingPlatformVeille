
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@using System.Text
@using Microsoft.AspNetCore.Components
@using MusicSellingApp.Shared
@using System.Text.Json
@using System.Net.Http
@inject HttpClient Http
@inject IJSRuntime JSRuntime
<link href="css/FormStyling.css" rel="stylesheet" />


<h3>RegistrationForm</h3>


<div class="register-box">
    <EditForm Model="@artist" OnValidSubmit="@Validate">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="user-box">
            <label>Age: </label>
            <InputNumber class="form-control" @bind-Value="artist.Age" />
        </div>

        <div class="user-box">
            <label>Artist Name : </label>
            <InputText class="form-control" @bind-Value="artist.Name" />
        </div>

        <div class="user-box">
            <label>Biography : </label>
            <InputTextArea class="form-control" @bind-Value="artist.Description" />
        </div>

        <div class="user-box">
            <label>Career Begin Date : </label>
            <InputDate class="form-control" @bind-Value="artist.CareerBeginDate" />
        </div>

        <div class="user-box">
            <label>Username : </label>
            <InputText @bind-Value="artist.Username" />
        </div>

        <div class="user-box">
            <label>Password : </label>
            <InputText type="password" class="form-control" @bind-Value="artist.Password" />
        </div>

        <div class="user-box">
            <label>Email: </label>
            <InputText @bind-Value="artist.Email" />
        </div>

        <div class="col text-center">
            <button type="submit" class="btn btn-primary">Register </button>
        </div>
        @if (isSuccess)
        {
            <RegistrationSuccessModal />
        }

    </EditForm>
</div>


@code {


    Artist artist = new Artist();
    bool isSuccess = false;

    public async Task Validate()
    {

        await Http.PostAsJsonAsync<Artist>("api/Users/Artists", artist).ContinueWith(async (antecedent) => {
            isSuccess = true;
            await JSRuntime.InvokeVoidAsync("alert", "You can succesfully registered");
        });
        Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject(artist));
    }
}

