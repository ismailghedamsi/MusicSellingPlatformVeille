// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicSellingApp.Server;

namespace MusicSellingApp.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200915203106_FixingMigration")]
    partial class FixingMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Album", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ArtistId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FanId")
                        .HasColumnType("bigint");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrackListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("FanId");

                    b.HasIndex("TrackListId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Cart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("fanId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("fanId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Song", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TrackListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrackListId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.TrackList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("TrackLists");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Admin", b =>
                {
                    b.HasBaseType("MusicSellingApp.Shared.Entitities.User");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Artist", b =>
                {
                    b.HasBaseType("MusicSellingApp.Shared.Entitities.User");

                    b.Property<DateTime?>("CareerBeginDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasDiscriminator().HasValue("Artist");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Fan", b =>
                {
                    b.HasBaseType("MusicSellingApp.Shared.Entitities.User");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("Fan_FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("Fan_LastName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasDiscriminator().HasValue("Fan");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Album", b =>
                {
                    b.HasOne("MusicSellingApp.Shared.Entitities.Artist", null)
                        .WithMany("Discography")
                        .HasForeignKey("ArtistId");

                    b.HasOne("MusicSellingApp.Shared.Entitities.Fan", null)
                        .WithMany("Library")
                        .HasForeignKey("FanId");

                    b.HasOne("MusicSellingApp.Shared.Entitities.TrackList", "TrackList")
                        .WithMany()
                        .HasForeignKey("TrackListId");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Cart", b =>
                {
                    b.HasOne("MusicSellingApp.Shared.Entitities.Fan", "fan")
                        .WithMany()
                        .HasForeignKey("fanId");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.Song", b =>
                {
                    b.HasOne("MusicSellingApp.Shared.Entitities.TrackList", null)
                        .WithMany("Songs")
                        .HasForeignKey("TrackListId");
                });

            modelBuilder.Entity("MusicSellingApp.Shared.Entitities.User", b =>
                {
                    b.HasOne("MusicSellingApp.Shared.Entitities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
